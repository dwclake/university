     1                                      global  _start
     2                                  
     3                                      section .text
     4                                  _start:
     5                                      ; sum first n in [1,3,5,7,9...]
     6 00000000 B800000000                  mov  rax, 0
     7                                      ; rbx is holding the init
     8 00000005 BB01000000                  mov  rbx, 1
     9                                      ; rcx is holding n
    10 0000000A B904000000                  mov rcx, 4
    11                                      
    12 0000000F EB05                        jmp loop
    13                                  add:
    14 00000011 4801D8                      add  rax, rbx
    15 00000014 EB02                        jmp  loop + 2
    16                                  loop:    
    17                                      ; add rbx to sum
    18 00000016 EBF9                        jmp  add
    19                                      ; add 2 to rbx, dec rcx
    20 00000018 4883C302                    add  rbx, 2 
    21 0000001C 48FFC9                      dec  rcx
    22                                  
    23                                      ; if rcx > 0, loop, else end
    24 0000001F 4883F900                    cmp  rcx, 0
    25 00000023 7FF1                        jg   loop
    26                                  end:
    27                                      ; mov total to rdx
    28 00000025 4889C2                      mov  rdx, rax
    29                                  
    30                                      ; sys_exit, returning sum
    31 00000028 B83C000000                  mov  rax, 60
    32 0000002D 4889D7                      mov  rdi, rdx
    33 00000030 0F05                        syscall
